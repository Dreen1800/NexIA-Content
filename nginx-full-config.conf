# Configuração completa Nginx - Aplicação React + Proxy Node.js
# Arquivo: /etc/nginx/sites-available/seu-app

# Upstream para o servidor proxy Node.js
upstream instagram_proxy {
    server 127.0.0.1:3001;
    # Se tiver múltiplas instâncias, adicione mais:
    # server 127.0.0.1:3002;
}

server {
    listen 80;
    server_name seu-dominio.com www.seu-dominio.com;  # Substitua pelo seu domínio
    
    # Redirecionar HTTP para HTTPS (em produção)
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name seu-dominio.com www.seu-dominio.com;

    # Certificados SSL - Configure com Let's Encrypt
    ssl_certificate /etc/letsencrypt/live/seu-dominio.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/seu-dominio.com/privkey.pem;
    
    # Configurações SSL otimizadas
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Logs
    access_log /var/log/nginx/seu-app-access.log;
    error_log /var/log/nginx/seu-app-error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;

    # === PROXY ENDPOINTS ===
    
    # Proxy para imagens do Instagram (via Node.js)
    location /instagram-proxy/ {
        proxy_pass http://instagram_proxy;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer settings para imagens
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }

    # API proxy dinâmico (via Node.js)
    location /api/instagram-proxy {
        proxy_pass http://instagram_proxy;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
    }

    # Health check do proxy
    location /health {
        proxy_pass http://instagram_proxy;
        access_log off;
    }

    # === APLICAÇÃO REACT ===
    
    # Arquivos estáticos da aplicação React
    location / {
        root /var/www/seu-app/dist;  # Caminho para build do React
        try_files $uri $uri/ /index.html;
        
        # Cache para index.html (não cachear para sempre)
        location = /index.html {
            expires 10m;
            add_header Cache-Control "public, must-revalidate";
        }
    }

    # Assets estáticos com cache longo
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        root /var/www/seu-app/dist;
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Optional: Brotli compression se disponível
        # brotli on;
        # brotli_comp_level 6;
    }

    # API manifest e service worker
    location ~* \.(webmanifest|manifest\.json)$ {
        root /var/www/seu-app/dist;
        expires 1d;
        add_header Cache-Control "public";
    }

    # Favicon
    location = /favicon.ico {
        root /var/www/seu-app/dist;
        expires 1y;
        access_log off;
    }

    # Robots.txt
    location = /robots.txt {
        root /var/www/seu-app/dist;
        expires 1d;
        access_log off;
    }
} 